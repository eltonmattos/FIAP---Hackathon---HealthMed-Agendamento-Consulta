services:

  webapi:
    build:
      context: .  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8080:80"  # Map port 8080 on the host to port 80 in the container
    environment:
      - ASPNETCORE_ENVIRONMENT=Production  # Set environment variables if needed
    networks:
      - webnet  # Use a custom network

networks:
  webnet:  # Define a custom network

  # sql-server:
  #   container_name: sql-server
  #   environment:
  #     ACCEPT_EULA: Y
  #     SA_PASSWORD: a688et6zar
  #     attach_dbs: "[{'dbName':'HealthMedAgendamento','dbFiles':['/var/opt/mssql/data/TechChallenge.mdf' , '/var/opt/mssql/data/TechChallenge_log.ldf']}]"
  #   image: mcr.microsoft.com/mssql/server:latest
  #   restart: always
  #   healthcheck:
  #       test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P example_123 -Q 'SELECT 1' || exit 1"]
  #       interval: 10s
  #       retries: 10
  #       start_period: 10s
  #       timeout: 3s
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - C:\Data/SQLServerData:/var/opt/mssql/data
    
  # api:
  #   container_name: healthmed_agendamento
  #   image: eltonmattos/healthmed_agendamento:latest
  #   ports:
  #     - "80:80"

# networks:
#   localprom:
#     driver: bridge